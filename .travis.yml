matrix:
    include:
        - os: linux
          dist: trusty
          sudo: required
          language: python
          python: 2.7
          services:
            - docker
          env: TOXENV=linux_py2
        - os: linux
          dist: trusty
          language: python
          python: 3.3
          services:
            - docker
          env: TOXENV=linux_py3
        - os: osx
          env: MEKA_CLASSPATH=/Users/travis/MEKA/meka/lib/

script:
- if [[ "$TOXENV" == "linux_py2" ]]; then docker exec -it scikit_multilearn_dev_test_docker python2 -m pytest -p no:warnings  /home/python-dev/repo; fi
- if [[ "$TOXENV" == "linux_py3" ]]; then docker exec -it scikit_multilearn_dev_test_docker python3 -m pytest -p no:warnings  /home/python-dev/repo; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then python3 -m pytest -p no:warnings  $TRAVIS_BUILD_DIR; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then python -m pytest -p no:warnings  $TRAVIS_BUILD_DIR; fi

before_install:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then docker rmi -f niedakh/scikit-multilearn-dev:latest    ; fi
#- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then docker rm -f scikit_multilearn_dev_test_docker    ; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then docker pull niedakh/scikit-multilearn-dev:latest      ; fi

- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then pip2 uninstall -y numpy                               ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then pip2 uninstall -y scipy                               ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then brew update                                           ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then brew tap brewsci/science                              ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then brew tap brewsci/bio                                  ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then brew upgrade python                                   ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then brew install graph-tool                               ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then mkdir ~/MEKA && wget https://adams.cms.waikato.ac.nz/snapshots/meka/meka-snapshot.zip -O ~/MEKA/meka.zip; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then cd ~/MEKA/ && unzip -a meka.zip && mv meka-* meka; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then git clone https://github.com/thunlp/OpenNE.git ~/OpenNE && pip3 install -e ~/OpenNE/src; fi

install:
- if [[ "$TRAVIS_OS_NAME" != "osx" ]];   then docker run -e "MEKA_CLASSPATH=/opt/meka/lib/" -v "$TRAVIS_BUILD_DIR:/home/python-dev/repo" --name scikit_multilearn_dev_test_docker -d niedakh/scikit-multilearn-dev:latest; fi
- if [[ "$TOXENV" == "linux_py2" ]]; then docker exec -it scikit_multilearn_dev_test_docker pip2 install --upgrade --force-reinstall numpy scipy scikit-learn; fi
- if [[ "$TOXENV" == "linux_py3" ]]; then docker exec -it scikit_multilearn_dev_test_docker pip3 install --upgrade --force-reinstall numpy scipy scikit-learn; fi
#- if [[ "$TOXENV" == "linux_py2" ]]; then docker exec -it scikit_multilearn_dev_test_docker pip install -r /home/python-dev/repo/requirements/keras.txt; fi
#- if [[ "$TOXENV" == "linux_py3" ]]; then docker exec -it scikit_multilearn_dev_test_docker pip3 install -r /home/python-dev/repo/requirements/keras.txt; fi
- if [[ "$TRAVIS_OS_NAME" != "osx" ]];   then find $TRAVIS_BUILD_DIR -name \*.pyc -delete; fi

- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then cd $TRAVIS_BUILD_DIR && pip install -r requirements/keras.txt; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then cd $TRAVIS_BUILD_DIR && pip install -r requirements-all.txt ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then cd $TRAVIS_BUILD_DIR && pip install --upgrade --force-reinstall numpy scipy scikit-learn; fi

- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then cd $TRAVIS_BUILD_DIR && pip3 install https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-1.12.0-py3-none-any.whl; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then cd $TRAVIS_BUILD_DIR && pip3 install -r requirements/keras.txt; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then cd $TRAVIS_BUILD_DIR && pip3 install -r requirements-all.txt; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then cd $TRAVIS_BUILD_DIR && pip3 install --upgrade --force-reinstall numpy scipy scikit-learn; fi


notifications:
  slack:
    secure: aTCuexl+J0s+ll8sS+p65Atmr9hgOYg0Qkv1nOwb+2oVlJtIYpwLymYZdMymeMtcbK8nlCKGuZRj9jpowzLvSU5kmmmbUdCskEzLf8guE/TUN5iMcIdvKnlAxfJ/MBXw59bjIuF3saYmzpkYbaBvj150M/tXMkYMLSgqwFMQq6U=

